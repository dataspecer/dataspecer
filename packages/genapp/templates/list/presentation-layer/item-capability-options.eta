import React, { useState } from "react";
import Menu from "@mui/material/Menu";
import MenuItem from "@mui/material/MenuItem";
import IconButton from "@mui/material/IconButton";
import DeleteIcon from "@mui/icons-material/Delete";
import ZoomInMapIcon from "@mui/icons-material/ZoomInMap";
import MoreVertIcon from "@mui/icons-material/MoreVert";
import EditIcon from '@mui/icons-material/Edit';
import { ListItemIcon, ListItemText } from "@mui/material";
import { <%= it.navigation_hook %> } from <%~ it.navigation_hook_path %>;
<%
    function getCapabilityButtonIcon(capabilityTransitionId) {

        switch(capabilityTransitionId) {
            case "list":
                return "<ListAltIcon />";
            case "detail":
                return "<ZoomInMapIcon />";
            case "create-instance":
                return "<AddIcon />";
            case "delete-instance":
                return "<DeleteIcon color=\"error\"/>";
            case "edit-instance":
                return "<EditIcon />";
            default:
                return "<></>";
        }
    }
%>
export const <%= it.export_name %> = ({ instanceId }: { instanceId: string }) => {

    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);
    const open = Boolean(anchorEl);
    const { handleInstanceCapabilityRedirect } = <%= it.navigation_hook %>();

    const handleClose = () => setAnchorEl(null);
    const handleClick = (event: React.MouseEvent<HTMLElement>) => {
        setAnchorEl(event.currentTarget);
    }

    const redirect = (urlPath: string) => {
        handleClose();
        handleInstanceCapabilityRedirect(urlPath, instanceId);
    }

    return (
        <>
            <IconButton
                aria-label="instance-more-options"
                id="long-button"
                aria-controls={open ? "<%= it.aggregate_technical_label %>-menu" : undefined}
                aria-expanded={open ? "true" : undefined}
                aria-haspopup="true"
                onClick={handleClick}
            >
                <MoreVertIcon />
            </IconButton>
            <Menu
                id="<%= it.aggregate_technical_label %>-menu"
                MenuListProps={{ "aria-labelledby": "long-button" }}
                anchorEl={anchorEl}
                open={open}
                onClose={handleClose}
                anchorOrigin={{
                    vertical: "top",
                    horizontal: "right",
                }}
                transformOrigin={{
                    vertical: "top",
                    horizontal: "right",
                }}
            ><% for (let index = 0; index < it.instance_transitions.length; index++) { %><% const transition = it.instance_transitions[index]; %>
                <MenuItem key={"<%~ transition.id %>"}
                    onClick={() => redirect("<%~ transition.id %>")}
                >
                    <ListItemIcon>
                        <%~ getCapabilityButtonIcon(transition.targetId) %>
                    </ListItemIcon>
                    <ListItemText>
                        <%~ transition.label %>
                    </ListItemText>
                </MenuItem><% } %>
            </Menu>
        </>
    )
}