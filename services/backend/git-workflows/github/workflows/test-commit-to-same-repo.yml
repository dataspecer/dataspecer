# TODO RadStr: Remove after commit
#              Commiting to the same repo, we extended this to commit to different repo

# # https://lannonbr.com/blog/2019-12-09-git-commit-in-actions/

# # Based on https://github.com/RadStr/test-repo-for-gh-actions/blob/main/.github/workflows/git-commit-simple.yml

##############

# name: Commit date to main
# on:
#   push:
#     paths-ignore:
#       - 'time.txt'
# jobs:
#   date:
#     runs-on: ubuntu-latest
#     steps:
#       # Checkout the branch
#       - name: checkout
#         uses: actions/checkout@v4
#         with:
#           persist-credentials: false

#       - name: save current date
#         run: |
#           # do some operation that changes a file in the git repo
#           date > time.txt

#       - name: setup git config
#         run: |
#           # setup the username and email. We can use 'GitHub Actions Bot' with no email by default
#           git config --global user.name "GitHub Actions Bot"
#           git config --global user.email "github-actions[bot]@users.noreply.github.com"
#           # ... The person who committed should be the one to generate the commit even though it is done by bot
#           # Maybe should be github.actor instead for name? but probably not.
#           git config --global user.name ${{ github.event.head_commit.author.name }}
#           git config --global user.email ${{ github.event.head_commit.author.email }}


#       - name: commit
#         env:
#           # Shell does not like GitHub secret variables so we have to define them separately
#           PAT_TOKEN: ${{ secrets.BOT_PAT_TOKEN }}
#           GITHUB_REPO_OWNER_AND_NAME: ${{ github.repository }}
#           BRANCH_NAME: ${{ github.ref_name }}
#         run: |
#           # Stage the file, commit and push
#           git add time.txt
#           git commit -m "New date commit"
#           # Using the bot's pat token stored either automatically from DS or by user
#           git remote set-url origin https://${PAT_TOKEN}@github.com/${GITHUB_REPO_OWNER_AND_NAME}.git
#           # Comment the push, because it is annoying for the testing
#           git push origin ${BRANCH_NAME}

########

# # Pushing is based on https://sameeradissanayaka.medium.com/how-to-use-github-actions-to-push-code-commit-to-another-branch-af04d8406f08
